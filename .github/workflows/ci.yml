# https://help.github.com/en/categories/automating-your-workflow-with-github-actions

on:
  pull_request:
  push:
  schedule:
    - cron: '3 3 * * 1'

name: CI

jobs:
  php-lint:
    name: PHP Lint

    runs-on: ubuntu-20.04

    strategy:
      fail-fast: false
      matrix:
        php-version:
          - 7.3
          - 7.4
          - 8.0
          - 8.1

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          coverage: none

      - name: PHP Lint
        # Note: Unlike the "ci:php:lint" Composer script, we do not use the
        # "parallel-lint" tool here. This allows us to lint the files without
        # depending on any Composer packages.
        run: find config src tests -name '*.php' -print0 | xargs -0 -n 1 -P 4 php -l

  composer-validate:
    name: Composer Validate

    runs-on: ubuntu-20.04

    strategy:
      matrix:
        php-version:
          - 7.4

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          tools: composer:v2
          coverage: none

      - name: Composer Validate
        run: composer validate --no-check-all --no-check-lock --strict

  composer-normalize:
    name: Composer Normalize

    runs-on: ubuntu-20.04

    strategy:
      matrix:
        php-version:
          - 7.4

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          tools: composer:v2
          coverage: none

      - name: Composer Normalize
        run: composer ci:composer:normalize

  static-analysis:
    name: Static Analysis

    runs-on: ubuntu-20.04

    needs: [ php-lint, composer-validate ]

    strategy:
      fail-fast: false
      matrix:
        command:
          - fixer
          - md
          - psalm
          - sniff
        php-version:
          - 7.4

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          tools: composer:v2
          coverage: none

      - name: Cache dependencies installed with composer
        uses: actions/cache@v1
        with:
          path: ~/.cache/composer
          key: php${{ matrix.php-version }}-composer-${{ hashFiles('**/composer.json') }}
          restore-keys: |
            php${{ matrix.php-version }}-composer-

      - name: Install Composer dependencies
        run: composer install --no-progress

      - name: Run Command
        run: composer ci:php:${{ matrix.command }}

  unit-tests:
    name: Unit tests

    runs-on: ubuntu-20.04

    needs: [ php-lint, composer-validate ]

    strategy:
      fail-fast: false
      matrix:
        php-version:
          - 7.3
          - 7.4
          - 8.0
          - 8.1
        dependencies:
          - lowest
          - highest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          ini-values: xdebug.max_nesting_level=500
          tools: composer:v2
          coverage: none

      - name: Cache dependencies installed with composer
        uses: actions/cache@v1
        with:
          path: ~/.cache/composer
          key: php${{ matrix.php-version }}-${{ matrix.dependencies }}-composer-${{ hashFiles('**/composer.json') }}
          restore-keys: |
            php${{ matrix.php-version }}-${{ matrix.dependencies }}-composer-

      - name: Install Composer dependencies
        run: |
          if [[ "${{ matrix.dependencies }}" == 'lowest' ]]; then
            DEPENDENCIES='--prefer-lowest';
          else
            DEPENDENCIES='';
          fi;
          composer install --no-progress;
          composer update --with-dependencies --no-progress "${DEPENDENCIES}";
          composer show;

      - name: Run Tests
        run: composer ci:tests:unit

  unit-tests-symfony-6:
    name: Unit tests with Symfony 6

    runs-on: ubuntu-20.04

    needs: [ php-lint, composer-validate ]

    strategy:
      matrix:
        php-version:
          - 8.0
          - 8.1
        dependencies:
          - lowest
          - highest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          ini-values: xdebug.max_nesting_level=500
          tools: composer:v2
          coverage: none

      - name: Install Composer dependencies
        run: |
          if [[ "${{ matrix.dependencies }}" == 'lowest' ]]; then
            DEPENDENCIES='--prefer-lowest';
          else
            DEPENDENCIES='';
          fi;
          composer require symfony/css-selector:^6.0.x-dev --no-progress
          composer update --with-dependencies --no-progress "${DEPENDENCIES}";
          composer show;

      - name: Run Tests
        run: composer ci:tests:unit
